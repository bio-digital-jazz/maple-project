{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(dplyr)\nlibrary(DT)\nlibrary(readr)\nlibrary(httr)\nlibrary(jsonlite)\n\n\n\n# get data\ndataAssetsDF0<- read_csv(\"./data/preparedData/dataAssets.csv\")\nusersAndRolesDF0 <- read_csv(\"./data/preparedData/usersAndRoles.csv\")\nassetsAndResourcesDF0 <- read_csv(\"./data/preparedData/assetsAndResources.csv\")\n\nui <- fluidPage(\n  \n\n  \n  \n  \n  fluidRow(\n    column(3,\n          \"\"  \n    ),\n    \n    column(9,\n           selectInput(\"assetChoice\", \n                       \"\", \n                       width='700px',\n                       choices = c(\"Choose a data asset\", as.list(sort(dataAssetsDF0$Name))), \n                       selected = NULL)\n          \n    ),\n    hr()\n  ),\n  \n  fluidRow(\n    column(2,\n           \"\"),\n    column(8,\n           uiOutput(\"allAssets\"))\n  )\n  \n)\n\n\n\nserver <- function(input, output) {\n  \n  # TABS\n  output$allAssets = renderUI({\n    if (input$assetChoice != \"Choose a data asset\") {\n\n      div(\n        textOutput(\"assetDetailDescription\"),\n        br(),\n        tabsetPanel(type = \"tabs\",\n                    tabPanel(\"Overview\", \n                             br(),\n                             tableOutput(\"assetDetailOverview\")),\n                    tabPanel(\"Users and roles\", \n                             br(),\n                             DTOutput(\"assetUsersAndRoles\")),\n                    tabPanel(\"Supporting documentation\", \n                             br(),\n                             DTOutput(\"assetDetailDocumentation\"))\n        )\n        \n      )\n    } else {\n      includeHTML(\"./overPartial.html\")\n    \n      }\n  })\n  \n  \n  ## ASSET DETAIL OVERVIEW\n  output$assetDetailOverview = renderTable({\n    if (input$assetChoice != \"Choose a data asset\") {\n      \n      assetDetails <- dataAssetsDF0 %>%\n        filter(Name == input$assetChoice) %>%\n        select(-dataAssetID, -\"Usage notes available\", -Description)\n      \n      df <- as.data.frame(t(assetDetails))\n      df$Description <- colnames(assetDetails)\n      colnames(df) = c(\"Data\", \"Description\")\n    \n      return(df[2:1])\n      \n \n      \n      return(t(assetDetails))\n    \n      \n     \n    }\n    \n  })\n  \n  \n  ## USERS AND ROLES\n  output$assetUsersAndRoles= renderDT({\n    if (input$assetChoice != \"Choose a data asset\") {\n      \n      \n      citibike <- fromJSON(\"http://localhost:8000/api/data-assets/v1/breach/\")\n      \n      return(data.frame(citibike))\n      \n      \n      # assetDetails <- dataAssetsDF0 %>%\n      #   filter(Name == input$assetChoice)\n      # \n      # usersAndRoles <- usersAndRolesDF0 %>%\n      #   filter(usersAndRolesDF0$dataAssetID ==  assetDetails$dataAssetID) %>%\n      #   select(-dataAssetID)\n      # \n      # return(usersAndRoles)\n     \n    }\n    \n  })\n  \n  \n  \n  \n  ## ASSET DETAIL DESCRIPTION\n  output$assetDetailDescription = renderText({\n    if (input$assetChoice != \"Choose a data asset\") {\n      choice <- dataAssetsDF0 %>% \n        filter(Name == input$assetChoice)\n      return(paste0(\"\", choice$Description))\n      \n    } \n  })\n  \n  ## ASSET DETAIL DOCUMENTATION\n  output$assetDetailDocumentation = renderDT({\n    if (input$assetChoice != \"Choose a data asset\") {\n      \n      \n      assetDetails <- dataAssetsDF0 %>%\n        filter(Name == input$assetChoice)\n      \n      assetsAndResources <- assetsAndResourcesDF0 %>%\n        filter(assetsAndResourcesDF0$dataAssetID ==  assetDetails$dataAssetID) %>%\n        select(-dataAssetID)\n      \n      return(assetsAndResources)\n      \n    }\n    \n  })\n  \n\n\n}\n\n\nshinyApp(ui = ui, server = server)\n\n",
    "created" : 1540094708139.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2209421215",
    "id" : "8DB5A784",
    "lastKnownWriteTime" : 1540095254,
    "last_content_update" : 1540095254019,
    "path" : "C:/JamiesFiles/Projects/MapleProject/shinyapps/app-metadata/app.R",
    "project_path" : "app.R",
    "properties" : {
        "notebook_format" : "html_document",
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}