{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(arm)\nlibrary(forecast)\nlibrary(ggplot2)\nlibrary(plotly)\n\n## CONFIG\nkColPurple = \"#48156BBF\"\n\n\n## DATA PREP\nPath = \"./Data/\"\nFile = \"TimeSeriesGroup.csv\"\nADS0 = read_csv(paste0(Path, File))\n# first user chooses a cancer\nADS1 = filter(ADS0, CancerGroup==\"Respiratory\") ### chose from drop down\nADS1 = filter(ADS1, AreaType==\"Resident LHD\") ### chose from drop down\nADS1 = filter(ADS1, AreaName==\"Central Coast LHD\") ### chose from drop down\nTempTimeSeries = ADS1$CasesAnnual\nFuture = 10 \nForecastARIMA = forecast(auto.arima(TempTimeSeries), Future)  \nMinYear = min(ADS1$DiagnosisYear, na.rm=TRUE) \nYMaxARIMA = round(max(ForecastARIMA$upper) * 1.1  / 5) * 5\nForecastARIMAFinal = round(ForecastARIMA[[4]][Future] / 5) * 5 ### use this number for the auto-authoring - more on this later...\n#autoplot(ForecastARIMA, ylim=c(0, YMaxARIMA), ylab=\"Number of cases\")\n\n### End\n\n\n\nui = fluidPage(\n  tags$head(\n    tags$link(rel = \"stylesheet\", type = \"text/css\", href = \"materialize/css/materialize.min.css\")\n  ),\n  \n  \n  titlePanel(\n    h4(\"Forecasting cancer incidence in NSW by area\")),\n  hr(),\n  sidebarLayout(\n    sidebarPanel(\n      p(\"This visualisation allows users to explore ARMIA forecasts\"),\n\n      \n      selectInput(\"cancerGroupFilter\", \n                  \"Filter by cancer groups\", \n                  multiple = FALSE,\n                  choices = list(\n                                 \"Bone and connective tissue\", \n                                 \"Breast\", \n                                 \"Cancer unknown primary\",\n                                 \"Colorectal\",\n                                 \"Head and Neck\",\n                                 \"Skin\",\n                                 \"Respiratory\"\n                                 ), \n                  selected = \"All cancer types\"),\n\n      selectInput(\"areaNameFilter\", \n                  \"Filter by Area name\", \n                  multiple = FALSE,\n                  choices = list(\n                                 \"Central Coast LHD\",\n                                 \"Far West LHD\",\n                                 \"Western Sydney LHD\",\n                                 \"Hunter New England LHD\",\n                                 \"Sydney LHD\",\n                                 \"South Western Sydney LHD\"\n                                 ), \n                  selected = \"Sydney LHD\"),\n      sliderInput(\"forecastFilter\", \n                  \"Forecast length\", \n                  min = 0, \n                  max = 10, \n                  value = 5)\n      \n   \n      \n      \n      \n    ),\n    mainPanel(\n      \n      \n      \n      \n      tabsetPanel(type = \"tabs\",\n                  tabPanel(\"Exploration one\", \n                           br(),\n                           plotlyOutput(\"forecasts\"),\n                           br(),\n                           \n                           htmlOutput(\"selected_var\")\n                  ),\n                  tabPanel(\"Exploration two\",\n                           p('decriptive title')),\n                  \n                  tabPanel(\"Data\", \n                           br(),\n                           p('download button'),\n                           downloadButton(\"downloadData\", \"Download\"),\n                           br(),\n                           tableOutput(\"summary\")),\n                  tabPanel(\"Notes\", \n\n                           p('asdfasdf')\n                           )\n      )\n      \n      \n      \n      \n    )\n    \n  )\n  \n)\nserver = function(input, output) {\n  \n  output$forecasts = renderPlotly({\n    \n    print(input$areaNameFilter)\n    \n   \n    ADS1 = filter(ADS0, CancerGroup==input$cancerGroupFilter) ### chose from drop down\n    ADS1 = filter(ADS1, AreaType== \"Resident LHD\") ### chose from drop down\n    ADS1 = filter(ADS1, AreaName==input$areaNameFilter) ### chose from drop down\n    TempTimeSeries = ADS1$CasesAnnual\n    Future = input$forecastFilter\n    ForecastARIMA = forecast(auto.arima(TempTimeSeries), Future)  \n    MinYear = min(ADS1$DiagnosisYear, na.rm=TRUE) \n    YMaxARIMA = round(max(ForecastARIMA$upper) * 1.1  / 5) * 5\n    ForecastARIMAFinal = round(ForecastARIMA[[4]][Future] / 5) * 5\n    \n    autoplot(ForecastARIMA, ylim=c(0, YMaxARIMA), ylab=\"Number of cases\")\n    \n    \n  })\n  \n  output$selected_var <- renderText({ \n    \n\n    \n    \n    paste(\"<b>Data insights</b><br/>\n          The visualisation above shows a forecast of \", input$cancerGroupFilter, ' cancers in the ', input$areaNameFilter, \n          ' area, over a ', input$forecastFilter, ' year period.')\n \n  })\n  \n  \n  \n}\n\nshinyApp(ui, server)\n\n\n\n\n",
    "created" : 1533793247646.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "343474767",
    "id" : "171D06AD",
    "lastKnownWriteTime" : 1530614540,
    "last_content_update" : 1530614540,
    "path" : "C:/JamiesFiles/Analytics/RShinyServer/shinyapps/app-forecasting-rates/app.R",
    "project_path" : "app.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}