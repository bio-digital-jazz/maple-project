facet_grid(. ~ DistanceExcess1Cat) +
scale_colour_manual(values = kBarCols)
#
NPanels = length(unique(RadioTXDF2$DistanceExcess1Cat))
windows(3.8*NPanels-1, 4)
RadioTXGG3
#---------------------------------------------------------------------------------------------------
### End
runApp('RadiotherapyDistanceAppv1.r')
View(RadioTXDF4)
View(RadioTXDF3)
70/511
511/651
runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
### Libraries
library(tidyverse)
### Constants - colours from RBCO chart
kColPurple = "#48156BBF"
kBarCols = c(
rgb( 74/256,  37/256, 116/256),
rgb(168/256, 143/256, 190/256),
rgb(128/256,  39/256, 122/256),
rgb(206/256, 178/256, 205/256),
rgb(  9/256, 168/256, 224/256),
rgb(  0/256,  86/256, 161/256),
rgb(134/256, 151/256, 204/256))
#---------------------------------------------------------------------------------------------------
### Import & Tidy & Transform
# pull in necessary Rda file
RadioTXDF0 = readRDS(file = "RadiotherapyDistanceApp.Rda")
# derive a summary table of radio facilities
RadioFacilities = RadioTXDF0 %>%
dplyr::group_by(TXFacilityName, TXFacilityLong, TXFacilityLat) %>%
dplyr::summarise() %>%
na.omit()
# pull in polygons to draw LHDs
LHDPolygons = readr::read_csv("LHDMapCoords.csv")
#---------------------------------------------------------------------------------------------------
## User choices
CancerCodeUser = "C61"  ### from the menu
LHDNameUser = "Nepean Blue Mountains" ### from the menu
# build cancer specific DF
RadioTXDF1 = RadioTXDF0 %>%
filter(Cancer==CancerCodeUser)
# build cancer specific and LHD specifi DF
RadioTXDF2 = RadioTXDF1 %>%
filter(ResidentLHDName==LHDNameUser)
# compute table of counts
RadioTXDF3 = with(RadioTXDF1, table(ResidentLHDName, DistanceExcess1Cat))
# compute table of proportions
RadioTXDF4 = t(prop.table(RadioTXDF3, 1))
# create LHD specific polygon for map
LHDXPolygon = LHDPolygons %>%
filter(LHDName==LHDNameUser)
# derive plot coords based on LHD and journeys to set the plot region for the map
XMax = max(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XMin = min(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XRange = XMax - XMin
YMax = max(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YMin = min(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YRange = YMax - YMin
if (XRange / 1.3 > YRange) {
YRange = XRange / 1.3
} else {
XRange = YRange * 1.3
}
XMax = XMin + XRange
YMax = YMin + YRange
# --------------------------------------------------
## Tab 1 stacked bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(t(RadioTXDF3), horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8)
axis(1, col="white")
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 2 stacked proportion bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(RadioTXDF4, horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8, xlim=c(0,1.1))
axis(1, 0:5/5, paste0(0:5*20, "%"), col="white")
text(1, 0:15*1.2 + 0.7, paste0("N=", rowSums(RadioTXDF3)), cex=0.8, pos=4)
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 3 maps of journeys by excess category
# build ggplot object
RadioTXGG3 = ggplot() +
coord_cartesian(xlim=c(XMin,XMax), ylim=c(YMin, YMax)) +
geom_polygon(data=LHDPolygons, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="lightgrey", size=0) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="darkgrey", size=0) +
geom_segment(data = RadioTXDF2,
aes(x = ResidentLong, y = ResidentLat, xend = TXFacilityLong, yend = TXFacilityLat, colour=DistanceExcess1Cat),
alpha=0.5, size=1.25) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = "white", fill=NA, size=0.5) +
geom_point(data=RadioFacilities,
aes(x=TXFacilityLong, y=TXFacilityLat), colour="red", size=1) +
ggtitle(paste0(LHDNameUser, ", ", CancerCodeUser)) +
labs(colour="Excess travel", caption="CINSW") +
facet_grid(. ~ DistanceExcess1Cat) +
scale_colour_manual(values = kBarCols)
#
NPanels = length(unique(RadioTXDF2$DistanceExcess1Cat))
windows(3.8*NPanels-1, 4)
RadioTXGG3
#---------------------------------------------------------------------------------------------------
### End
runApp('RadiotherapyDistanceAppv1.r')
View(NPanels)
runApp('RadiotherapyDistanceAppv1.r')
gg_facet_nrow <- function(p){
assertive.types::assert_is_any_of(p, 'ggplot')
p %>% ggplot2::ggplot_build()            %>%
magrittr::extract2('layout')       %>%
magrittr::extract2('panel_layout') %>%
magrittr::extract2('ROW')          %>%
unique()                           %>%
length()
}
runApp('RadiotherapyDistanceAppv1.r')
library("assertive.types")
install.packages("assertive.types")
runApp('RadiotherapyDistanceAppv1.r')
library(ggplot2)
library(shiny)
library(tidyverse)
mtcars$cyl = sample(letters[1:5], 32, TRUE)
gg_facet_nrow<- function(p){
p %>% ggplot2::ggplot_build()  %>%
magrittr::extract2('layout')       %>%
magrittr::extract2('panel_layout') %>%
magrittr::extract2('ROW')          %>%
unique()                           %>%
length()
}
ui <- fluidPage(
navbarPage(title="title",
tabPanel("One",
column(3,
wellPanel( selectInput('name', 'NAME', c("A", "B")))),
column(9, plotOutput('plot1')))
))
server <- function(input, output) {
X <- reactive({input$name == "A"})
p1 <- reactive({
if(X()){
p1 <- ggplot(mtcars, aes(mpg, wt)) + facet_grid( . ~ gear )
}else{
p1 <- ggplot(mtcars, aes(mpg, wt)) + facet_grid( cyl  ~ gear )
}
return(p1)
})
he <- reactive(gg_facet_nrow(p1()))
output$plot1 <- renderPlot({p1() }, height = function(){he()*300})
}
shinyApp(ui,server)
gg_facet_nrow<- function(p){
p %>% ggplot2::ggplot_build()  %>%
magrittr::extract2('layout')       %>%
magrittr::extract2('panel_layout') %>%
magrittr::extract2('ROW')          %>%
unique()                           %>%
length()
}
runApp('RadiotherapyDistanceAppv1.r')
set_panel_size <- function(p=NULL, g=ggplotGrob(p), file=NULL,
margin = unit(1,"mm"),
width=unit(4, "cm"),
height=unit(4, "cm")){
panels <- grep("panel", g$layout$name)
panel_index_w<- unique(g$layout$l[panels])
panel_index_h<- unique(g$layout$t[panels])
nw <- length(panel_index_w)
nh <- length(panel_index_h)
if(getRversion() < "3.3.0"){
# the following conversion is necessary
# because there is no `[<-`.unit method
# so promoting to unit.list allows standard list indexing
g$widths <- grid:::unit.list(g$widths)
g$heights <- grid:::unit.list(g$heights)
g$widths[panel_index_w] <-  rep(list(width),  nw)
g$heights[panel_index_h] <- rep(list(height), nh)
} else {
g$widths[panel_index_w] <-  rep(width,  nw)
g$heights[panel_index_h] <- rep(height, nh)
}
if(!is.null(file))
ggsave(file, g,
width = convertWidth(sum(g$widths) + margin,
unitTo = "in", valueOnly = TRUE),
height = convertHeight(sum(g$heights) + margin,
unitTo = "in", valueOnly = TRUE))
g
}
runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
library(shiny); runApp('RadiotherapyDistanceAppv1.r')
### Libraries
library(tidyverse)
### Constants - colours from RBCO chart
kColPurple = "#48156BBF"
kBarCols = c(
rgb( 74/256,  37/256, 116/256),
rgb(168/256, 143/256, 190/256),
rgb(128/256,  39/256, 122/256),
rgb(206/256, 178/256, 205/256),
rgb(  9/256, 168/256, 224/256),
rgb(  0/256,  86/256, 161/256),
rgb(134/256, 151/256, 204/256))
#---------------------------------------------------------------------------------------------------
### Import & Tidy & Transform
# pull in necessary Rda file
RadioTXDF0 = readRDS(file = "RadiotherapyDistanceApp.Rda")
# derive a summary table of radio facilities
RadioFacilities = RadioTXDF0 %>%
dplyr::group_by(TXFacilityName, TXFacilityLong, TXFacilityLat) %>%
dplyr::summarise() %>%
na.omit()
# pull in polygons to draw LHDs
LHDPolygons = readr::read_csv("LHDMapCoords.csv")
#---------------------------------------------------------------------------------------------------
## User choices
CancerCodeUser = "C61"  ### from the menu
LHDNameUser = "Nepean Blue Mountains" ### from the menu
# build cancer specific DF
RadioTXDF1 = RadioTXDF0 %>%
filter(Cancer==CancerCodeUser)
# build cancer specific and LHD specifi DF
RadioTXDF2 = RadioTXDF1 %>%
filter(ResidentLHDName==LHDNameUser)
# compute table of counts
RadioTXDF3 = with(RadioTXDF1, table(ResidentLHDName, DistanceExcess1Cat))
# compute table of proportions
RadioTXDF4 = t(prop.table(RadioTXDF3, 1))
# create LHD specific polygon for map
LHDXPolygon = LHDPolygons %>%
filter(LHDName==LHDNameUser)
# derive plot coords based on LHD and journeys to set the plot region for the map
XMax = max(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XMin = min(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XRange = XMax - XMin
YMax = max(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YMin = min(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YRange = YMax - YMin
if (XRange / 1.3 > YRange) {
YRange = XRange / 1.3
} else {
XRange = YRange * 1.3
}
XMax = XMin + XRange
YMax = YMin + YRange
# --------------------------------------------------
## Tab 1 stacked bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(t(RadioTXDF3), horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8)
axis(1, col="white")
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 2 stacked proportion bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(RadioTXDF4, horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8, xlim=c(0,1.1))
axis(1, 0:5/5, paste0(0:5*20, "%"), col="white")
text(1, 0:15*1.2 + 0.7, paste0("N=", rowSums(RadioTXDF3)), cex=0.8, pos=4)
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 3 maps of journeys by excess category
# build ggplot object
RadioTXGG3 = ggplot() +
coord_cartesian(xlim=c(XMin,XMax), ylim=c(YMin, YMax)) +
geom_polygon(data=LHDPolygons, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="lightgrey", size=0) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="darkgrey", size=0) +
geom_segment(data = RadioTXDF2,
aes(x = ResidentLong, y = ResidentLat, xend = TXFacilityLong, yend = TXFacilityLat, colour=DistanceExcess1Cat),
alpha=0.5, size=1.25) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = "white", fill=NA, size=0.5) +
geom_point(data=RadioFacilities,
aes(x=TXFacilityLong, y=TXFacilityLat), colour="red", size=1) +
ggtitle(paste0(LHDNameUser, ", ", CancerCodeUser)) +
labs(colour="Excess travel", caption="CINSW") +
facet_grid(. ~ DistanceExcess1Cat) +
scale_colour_manual(values = kBarCols)
#
NPanels = length(unique(RadioTXDF2$DistanceExcess1Cat))
windows(3.8*NPanels-1, 4)
RadioTXGG3
#---------------------------------------------------------------------------------------------------
### End
runApp('RadiotherapyDistanceAppv1.r')
View(RadioTXDF2)
View(RadioTXDF2)
library(shiny); runApp('RadiotherapyDistanceAppv1.r')
### Libraries
library(tidyverse)
### Constants - colours from RBCO chart
kColPurple = "#48156BBF"
kBarCols = c(
rgb( 74/256,  37/256, 116/256),
rgb(168/256, 143/256, 190/256),
rgb(128/256,  39/256, 122/256),
rgb(206/256, 178/256, 205/256),
rgb(  9/256, 168/256, 224/256),
rgb(  0/256,  86/256, 161/256),
rgb(134/256, 151/256, 204/256))
#---------------------------------------------------------------------------------------------------
### Import & Tidy & Transform
# pull in necessary Rda file
RadioTXDF0 = readRDS(file = "RadiotherapyDistanceApp.Rda")
# derive a summary table of radio facilities
RadioFacilities = RadioTXDF0 %>%
dplyr::group_by(TXFacilityName, TXFacilityLong, TXFacilityLat) %>%
dplyr::summarise() %>%
na.omit()
# pull in polygons to draw LHDs
LHDPolygons = readr::read_csv("LHDMapCoords.csv")
#---------------------------------------------------------------------------------------------------
## User choices
CancerCodeUser = "C61"  ### from the menu
LHDNameUser = "Nepean Blue Mountains" ### from the menu
# build cancer specific DF
RadioTXDF1 = RadioTXDF0 %>%
filter(Cancer==CancerCodeUser)
# build cancer specific and LHD specifi DF
RadioTXDF2 = RadioTXDF1 %>%
filter(ResidentLHDName==LHDNameUser)
# compute table of counts
RadioTXDF3 = with(RadioTXDF1, table(ResidentLHDName, DistanceExcess1Cat))
# compute table of proportions
RadioTXDF4 = t(prop.table(RadioTXDF3, 1))
# create LHD specific polygon for map
LHDXPolygon = LHDPolygons %>%
filter(LHDName==LHDNameUser)
# derive plot coords based on LHD and journeys to set the plot region for the map
XMax = max(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XMin = min(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XRange = XMax - XMin
YMax = max(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YMin = min(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YRange = YMax - YMin
if (XRange / 1.3 > YRange) {
YRange = XRange / 1.3
} else {
XRange = YRange * 1.3
}
XMax = XMin + XRange
YMax = YMin + YRange
# --------------------------------------------------
## Tab 1 stacked bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(t(RadioTXDF3), horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8)
axis(1, col="white")
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 2 stacked proportion bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(RadioTXDF4, horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8, xlim=c(0,1.1))
axis(1, 0:5/5, paste0(0:5*20, "%"), col="white")
text(1, 0:15*1.2 + 0.7, paste0("N=", rowSums(RadioTXDF3)), cex=0.8, pos=4)
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 3 maps of journeys by excess category
# build ggplot object
RadioTXGG3 = ggplot() +
coord_cartesian(xlim=c(XMin,XMax), ylim=c(YMin, YMax)) +
geom_polygon(data=LHDPolygons, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="lightgrey", size=0) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="darkgrey", size=0) +
geom_segment(data = RadioTXDF2,
aes(x = ResidentLong, y = ResidentLat, xend = TXFacilityLong, yend = TXFacilityLat, colour=DistanceExcess1Cat),
alpha=0.5, size=1.25) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = "white", fill=NA, size=0.5) +
geom_point(data=RadioFacilities,
aes(x=TXFacilityLong, y=TXFacilityLat), colour="red", size=1) +
ggtitle(paste0(LHDNameUser, ", ", CancerCodeUser)) +
labs(colour="Excess travel", caption="CINSW") +
facet_grid(. ~ DistanceExcess1Cat) +
scale_colour_manual(values = kBarCols)
#
NPanels = length(unique(RadioTXDF2$DistanceExcess1Cat))
windows(3.8*NPanels-1, 4)
RadioTXGG3
#---------------------------------------------------------------------------------------------------
### End
runApp('RadiotherapyDistanceAppv1.r')
### Libraries
library(tidyverse)
### Constants - colours from RBCO chart
kColPurple = "#48156BBF"
kBarCols = c(
rgb( 74/256,  37/256, 116/256),
rgb(168/256, 143/256, 190/256),
rgb(128/256,  39/256, 122/256),
rgb(206/256, 178/256, 205/256),
rgb(  9/256, 168/256, 224/256),
rgb(  0/256,  86/256, 161/256),
rgb(134/256, 151/256, 204/256))
#---------------------------------------------------------------------------------------------------
### Import & Tidy & Transform
# pull in necessary Rda file
RadioTXDF0 = readRDS(file = "RadiotherapyDistanceApp.Rda")
# derive a summary table of radio facilities
RadioFacilities = RadioTXDF0 %>%
dplyr::group_by(TXFacilityName, TXFacilityLong, TXFacilityLat) %>%
dplyr::summarise() %>%
na.omit()
# pull in polygons to draw LHDs
LHDPolygons = readr::read_csv("LHDMapCoords.csv")
#---------------------------------------------------------------------------------------------------
## User choices
CancerCodeUser = "C61"  ### from the menu
LHDNameUser = "Nepean Blue Mountains" ### from the menu
# build cancer specific DF
RadioTXDF1 = RadioTXDF0 %>%
filter(Cancer==CancerCodeUser)
# build cancer specific and LHD specifi DF
RadioTXDF2 = RadioTXDF1 %>%
filter(ResidentLHDName==LHDNameUser)
# compute table of counts
RadioTXDF3 = with(RadioTXDF1, table(ResidentLHDName, DistanceExcess1Cat))
# compute table of proportions
RadioTXDF4 = t(prop.table(RadioTXDF3, 1))
# create LHD specific polygon for map
LHDXPolygon = LHDPolygons %>%
filter(LHDName==LHDNameUser)
# derive plot coords based on LHD and journeys to set the plot region for the map
XMax = max(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XMin = min(LHDXPolygon$Long, RadioTXDF2$ResidentLong, RadioTXDF2$TXFacilityLong, na.rm=TRUE)
XRange = XMax - XMin
YMax = max(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YMin = min(LHDXPolygon$Lat, RadioTXDF2$ResidentLat, RadioTXDF2$TXFacilityLat, na.rm=TRUE)
YRange = YMax - YMin
if (XRange / 1.3 > YRange) {
YRange = XRange / 1.3
} else {
XRange = YRange * 1.3
}
XMax = XMin + XRange
YMax = YMin + YRange
# --------------------------------------------------
## Tab 1 stacked bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(t(RadioTXDF3), horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8)
axis(1, col="white")
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 2 stacked proportion bar chart
### !!! in base R needs converting to ggplot !!!
windows(10,10)
par(mar=c(3,12,2,4))
barplot(RadioTXDF4, horiz=TRUE, las=2, bor="white", col=kBarCols[1:6], axes=FALSE, cex.names=0.8, xlim=c(0,1.1))
axis(1, 0:5/5, paste0(0:5*20, "%"), col="white")
text(1, 0:15*1.2 + 0.7, paste0("N=", rowSums(RadioTXDF3)), cex=0.8, pos=4)
mtext(paste0("Excess travel: ", CancerCodeUser), side=3, adj=0)
# --------------------------------------------------
## Tab 3 maps of journeys by excess category
# build ggplot object
RadioTXGG3 = ggplot() +
coord_cartesian(xlim=c(XMin,XMax), ylim=c(YMin, YMax)) +
geom_polygon(data=LHDPolygons, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="lightgrey", size=0) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = NA, fill="darkgrey", size=0) +
geom_segment(data = RadioTXDF2,
aes(x = ResidentLong, y = ResidentLat, xend = TXFacilityLong, yend = TXFacilityLat, colour=DistanceExcess1Cat),
alpha=0.5, size=1.25) +
geom_polygon(data=LHDXPolygon, aes(x=Long, y=Lat, group=LHDSegment),
colour = "white", fill=NA, size=0.5) +
geom_point(data=RadioFacilities,
aes(x=TXFacilityLong, y=TXFacilityLat), colour="red", size=1) +
ggtitle(paste0(LHDNameUser, ", ", CancerCodeUser)) +
labs(colour="Excess travel", caption="CINSW") +
facet_grid(. ~ DistanceExcess1Cat) +
scale_colour_manual(values = kBarCols)
#
NPanels = length(unique(RadioTXDF2$DistanceExcess1Cat))
windows(3.8*NPanels-1, 4)
RadioTXGG3
#---------------------------------------------------------------------------------------------------
### End
runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
library(shiny); runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
runApp('RadiotherapyDistanceAppv1.r')
library(shiny); runApp('RadiotherapyDistanceAppv1.r')
library(shiny); runApp('RadiotherapyDistanceAppv1.r')
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
